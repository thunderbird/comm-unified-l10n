/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, you can obtain one at http://mozilla.org/MPL/2.0/. */

:root {
  @media not (prefers-contrast) {
    --list-container-background-selected: light-dark(
      color-mix(in srgb, var(--layout-background-0) 90%, var(--color-gray-50)),
      color-mix(in srgb, var(--layout-background-0) 82%, var(--color-gray-30))
    );
    --list-container-border-selected: light-dark(var(--color-gray-40), var(--color-gray-60));
    --list-container-background-selected-current: light-dark(
      color-mix(in srgb, var(--layout-background-0) 82%, var(--color-gray-50)),
      color-mix(in srgb, var(--layout-background-0) 77%, var(--color-gray-30))
    );
    --list-indicator-background-selected: light-dark(var(--color-gray-30), var(--color-gray-70));
    --list-indicator-border-selected: light-dark(var(--color-gray-40), var(--color-gray-60));
    --list-container-border-selected-current: light-dark(var(--color-gray-40), var(--color-gray-50));
    --list-container-background-hover: light-dark(
      color-mix(in srgb, var(--selected-item-color) 5%, var(--sidebar-background)),
      color-mix(in srgb, var(--selected-item-color) 10%, var(--sidebar-background))
    );
    --list-container-border-hover: color-mix(in srgb, var(--selected-item-color) 60%, transparent);
    --list-container-background-selected-focused: light-dark(
      color-mix(in srgb, var(--selected-item-color) 7%, var(--sidebar-background)),
      color-mix(in srgb, var(--selected-item-color) 14%, var(--sidebar-background))
    );
    --list-container-border-selected-focused: color-mix(in srgb, var(--selected-item-color) 30%, transparent);
    --list-container-border-selected-current-focused: var(--selected-item-color);
    --list-container-background-selected-current-focused: light-dark(
      color-mix(in srgb, var(--selected-item-color) 15%, var(--sidebar-background)),
      color-mix(in srgb, var(--selected-item-color) 30%, var(--sidebar-background))
    );
    --list-indicator-background-selected-focused: var(--selected-item-color);
    --list-indicator-border-selected-focused: light-dark(
      color-mix(in srgb, var(--selected-item-color) 80%, black),
      color-mix(in srgb, var(--selected-item-color) 80%, white)
    );
    --list-indicator-height-offset: 3px;
  }

  @media (prefers-contrast) {
    --list-container-background-selected: color-mix(in srgb, Canvas 80%, CanvasText);
    --list-container-border-selected: CanvasText;
    --list-container-background-selected-current: color-mix(in srgb, Canvas 70%, CanvasText);
    --list-container-border-selected-current: CanvasText;
    --list-indicator-background-selected: color-mix(in srgb, Canvas 70%, CanvasText);
    --list-indicator-border-selected: color-mix(in srgb, Canvas 50%, CanvasText);
    --list-container-background-hover: color-mix(in srgb, Canvas 95%, SelectedItem);
    --list-container-border-hover: SelectedItem;
    --list-container-background-selected-focused: color-mix(in srgb, Canvas 70%, CanvasText);
    --list-container-border-selected-focused: color-mix(in srgb, CanvasText 30%, SelectedItem);
    --list-container-border-selected-current-focused: color-mix(in srgb, CanvasText 20%, SelectedItem);
    --list-container-background-selected-current-focused: SelectedItem;
    --list-indicator-background-selected-focused: SelectedItem;
    --list-indicator-border-selected-focused: color-mix(in srgb, CanvasText 30%, SelectedItem);
  }

  &[uidensity="compact"] {
    --list-indicator-height-offset: 1px;
  }
}

ul[role="tree"] {

  & .container {
    display: flex;
    align-items: center;
    position: relative;
    -moz-context-properties: fill;
    margin-inline: 6px;
    border: 1px solid var(--sidebar-background);
    border-radius: var(--listbox-border-radius);
    fill: currentColor;
    cursor: default;
    padding-inline-start: var(--indent);
    outline: none;
    --indicator-width: 3px;

    @media (prefers-reduced-motion: no-preference) {
      & {
        transition:
          color var(--transition-duration) var(--transition-timing),
          background-color var(--transition-duration) var(--transition-timing),
          fill var(--transition-duration) var(--transition-timing),
          stroke var(--transition-duration) var(--transition-timing);

        &::before {
          transition:
            transform 200ms ease,
            background-color var(--transition-duration) var(--transition-timing),
            border-color var(--transition-duration);
        }
      }
    }

    &::before {
      position: absolute;
      content: "";
      inset-block: var(--list-indicator-height-offset);
      inset-inline-start: 1px;
      background-color: var(--indicator-background);
      border: 1px solid var(--indicator-border);
      border-radius: var(--indicator-width);
      width: var(--indicator-width);
      box-sizing: border-box;
      transform: translateX(-12px);
    }

    li.selected > & {
      border-color: var(--list-container-border-selected);
      background-color: var(--list-container-background-selected);
      --indicator-border: var(--list-indicator-border-selected);
      --indicator-background: var(--list-indicator-background-selected);

      &::before {
        transform: translateX(-6px);
      }
    }

    li.selected.current > & {
      border-color: var(--list-container-border-selected-current);
      background-color: var(--list-container-background-selected-current);
    }

    li:not(.selected) > &:hover {
      border-color: var(--list-container-border-hover);
      background-color: var(--list-container-background-hover);
    }

    & .twisty {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: var(--list-item-buttons-size);
      height: var(--list-item-buttons-size);
    }

    li:not(.children) > & .twisty-icon {
      display: none;
    }

    li.children.collapsed > & .twisty-icon {
        transform: rotate(-90deg);
      }

    li.children.collapsed:dir(rtl) > & .twisty-icon {
      transform: rotate(90deg);
    }

    @media (prefers-reduced-motion: no-preference) {
      & .twisty-icon {
        transition: transform var(--transition-duration) var(--transition-timing);
      }
    }
  }

  &:focus-within li.selected > .container,
  & li.drop-target > .container {
    border-color: var(--list-container-border-selected-focused);
    background-color: var(--list-container-background-selected-focused);
    --indicator-border: var(--list-indicator-border-selected-focused);
    --indicator-background: var(--list-indicator-background-selected-focused);

    @media (prefers-contrast) {
      outline: 1px solid SelectedItemText;
      outline-offset: -2px;
    }
  }

  &:focus-within li.selected.current > .container {
    border-color: var(--list-container-border-selected-current-focused);
    background-color: var(--list-container-background-selected-current-focused);

    @media (prefers-contrast) {
      color: var(--selected-item-text-color);
    }
  }
}
