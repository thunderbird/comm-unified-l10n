/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIMsgDBHdr;
interface nsIRequest;
interface nsIStreamListener;
interface nsIMsgIncomingServer;

interface IEwsFolderCallbacks;
interface IEwsMessageCallbacks;

[uuid(4a117361-653b-48a5-9ddb-588482ef9dbb)]
interface IEwsClient : nsISupports
{
  void initialize(in AUTF8String endpoint, in nsIMsgIncomingServer server);

  cenum Error : 8 {
    EWS_ERR_AUTHENTICATION_FAILED,
    EWS_ERR_UNEXPECTED,
  };

  void syncFolderHierarchy(in IEwsFolderCallbacks callbacks, in AUTF8String syncStateToken);
  void syncMessagesForFolder(in IEwsMessageCallbacks callbacks, in AUTF8String folderId, in AUTF8String syncStateToken);
  void getMessage(in AUTF8String id, in nsIRequest request, in nsIStreamListener listener);
};

[uuid(5dacc994-30e0-42f7-94c8-52756638add5)]
interface IEwsFolderCallbacks : nsISupports
{
  void recordRootFolder(in AUTF8String id);

  void create(in AUTF8String id, in AUTF8String parentId, in AString name, in unsigned long flags);
  void update(in AUTF8String id, in AUTF8String name);
  void delete(in AUTF8String id);

  void updateSyncState(in AUTF8String syncStateToken);
  void onError(in IEwsClient_Error err, in AUTF8String desc);
};

[uuid(dec2ddd5-b5a2-4724-bfc7-e5de31840f76)]
interface IEwsMessageCallbacks : nsISupports
{
  nsIMsgDBHdr createNewHeaderForItem(in AUTF8String ewsId);
  void commitHeader(in nsIMsgDBHdr hdr);

  void updateSyncState(in AUTF8String syncStateToken);
  void onError(in IEwsClient_Error err, in AUTF8String desc);
};
