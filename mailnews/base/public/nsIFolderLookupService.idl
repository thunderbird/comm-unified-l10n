/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIMsgFolder;

/**
 * This service provides a way to lookup any nsIMsgFolder.
 *
 * When looking up folders by URL, note that the URL must be encoded to be a
 * valid folder URL. Of particular note are the following requirements:
 * - invalid characters in paths must be percent-encoded
 * - the URL MUST NOT have a trailing slash (excepting root folders)
 * - the case must match the expected value exactly
 * An example of a valid URL is thus:
 * imap://someuser%40google.com@imap.google.com/INBOX
 *
 * The contractid for this service is "@mozilla.org/mail/folder-lookup;1".
 */
[scriptable,uuid(f5ed5997-3945-48fc-a59d-d2191a94bb60)]
interface nsIFolderLookupService : nsISupports
{
  /**
   * Returns a folder with the given URL or null if no such folder exists.
   *
   * @param aUrl The folder URL
   */
  nsIMsgFolder getFolderForURL(in AUTF8String aUrl);

  /**
   * Creates and returns a new folder with the given parent folder.
   *
   * Implementations of this interface MUST set `parentFolder` to be the parent
   * of the newly created folder.
   *
   * @param parentFolder The parent folder.
   * @param urlEncodedName The name of the folder to create, URL encoded.
   */
  nsIMsgFolder createFolderAndCache(in nsIMsgFolder parentFolder, in AUTF8String urlEncodedName);

  /**
   * @deprecated (Bug 1679333). Use either `getFolderForURL` or
   * `createFolderAndCache` to explicitly get an existing folder or create a new
   * folder instead.
   *
   * Returns a folder with the given URL.  Will happily create and return an
   * invalid (unparented) folder.  Will return null if aUrl is not a folder url.
   * NOTE: don't use this for new code! It's here purely to help transition away
   * from RDF-based folder creation.
   *
   * @param aUrl The folder URL
   */
  nsIMsgFolder getOrCreateFolderForURL(in AUTF8String aUrl);

  /**
   * Store a folder in the service's cache. This is used by the new database
   * because creating a new folder by URI is not allowed.
   *
   * Only for use when mail.panorama.enabled is true!
   *
   * @param aUrl - The folder URL.
   * @param aFolder - The folder to cache.
   */
  void cache(in AUTF8String aUrl, in nsIMsgFolder aFolder);
};

%{C++
#define NSIFLS_CONTRACTID "@mozilla.org/mail/folder-lookup;1"
%}
